--
-- Part of the Austral project, under the Apache License v2.0 with LLVM Exceptions.
-- See LICENSE file for details.
--
-- SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
--
"""
Type classes for representing partial and total ordering relations.
"""
module Standard.Order is
    """
    Represents the result of comparing the order of two values.
    """
    union Ordering: Free is
        case LessThan;
        case Equal;
        case GreaterThan;
    end;

    """
    Represents the result of comparing two values for (partial) order.
    """
    union PartialOrdering: Free is
        case Comparable is
            order: Ordering;
        case Incomparable;
    end;

    """
    Represents a partial order.
    """
    typeclass PartialOrder(T: Type) is
        generic [R: Region, S: Region]
        method partialCompare(a: &[T, R], b: &[T, S]): PartialOrdering;
    end;

    """
    Represents a total order.
    """
    typeclass TotalOrder(T: Type) is
        generic [R: Region, S: Region]
        method compare(a: &[T, R], b: &[T, S]): Ordering;
    end;

    generic [T: Type(TotalOrder), R: Region, S: Region]
    function equal(a: &[T, R], b: &[T, S]): Bool;

    instance PartialOrder(Nat8);
    instance TotalOrder(Nat8);
end module.